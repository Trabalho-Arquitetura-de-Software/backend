type UserDTO{
    id: ID
    name: String!
    email: String!
    password: String!
    role: UserRole!
}

type AuthToken{
    token: String!
}

enum UserRole{
    ADMIN,
    PROFESSOR,
    STUDENT
}

type Query{
    findUserByEmail(email: String!): UserDTO!
    findUserByRole(role: UserRole!): [UserDTO!]!
    findUserById(id: ID!): UserDTO!
    findAllUsers:[UserDTO!]!
}

type Mutation{
    saveUser(name: String!, email: String!, password: String!, role: UserRole!): UserDTO!
    updateUser(id: ID!, name: String, email: String, password: String, role: UserRole): UserDTO!
    deleteUser(id: ID!): UserDTO!

    login(email: String!, password: String!): AuthToken!
    register(name: String!, email: String!, password: String!, role: UserRole!): UserDTO!
}
